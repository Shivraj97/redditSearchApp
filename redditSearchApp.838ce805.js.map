{"version":3,"sources":["redditapi.js","index.js"],"names":["search","searchTerm","searchLimit","sortBy","fetch","then","res","json","data","children","map","catch","err","console","log","searchForm","document","getElementById","searchInput","showMessage","message","className","div","createElement","appendChild","createTextNode","searchContainer","insertBefore","setTimeout","querySelector","remove","truncateText","text","limit","shortened","indexOf","substring","addEventListener","e","value","preventDefault","results","output","forEach","post","image","preview","images","source","url","title","selftext","subreddit","score","innerHTML"],"mappings":";AAAe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACbA,OAAQ,SAAUC,EAAYC,EAAaC,GAClCC,OAAAA,MAA6CH,uCAAAA,OAAAA,EAC5CE,gBAAAA,OAAAA,EAAgBD,WAAAA,OAAAA,IACrBG,KAAK,SAACC,GAAQA,OAAAA,EAAIC,SAClBF,KAAK,SAACG,GAASA,OAAAA,EAAKA,KAAKC,SAASC,IAAI,SAACF,GAASA,OAAAA,EAAKA,SACrDG,MAAM,SAACC,GAAQC,OAAAA,QAAQC,IAAIF,OANnB,QAAA,QAAA;;ACgFd,aAhFD,IAAA,EAAA,EAAA,QAAA,gBAgFC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA9ED,IAAMG,EAAaC,SAASC,eAAe,eACrCC,EAAcF,SAASC,eAAe,gBAsD5C,SAASE,EAAYC,EAASC,GAEtBC,IAAAA,EAAMN,SAASO,cAAc,OACnCD,EAAID,UAAqBA,SAAAA,OAAAA,GAEzBC,EAAIE,YAAYR,SAASS,eAAeL,IAElCM,IAAAA,EAAkBV,SAASC,eAAe,oBAE1CjB,EAASgB,SAASC,eAAe,UAEvCS,EAAgBC,aAAaL,EAAKtB,GAElC4B,WAAW,WACTZ,SAASa,cAAc,UAAUC,UAChC,KAIL,SAASC,EAAaC,EAAMC,GACpBC,IAAAA,EAAYF,EAAKG,QAAQ,IAAKF,GAChCC,OAAc,GAAdA,EAAwBF,EACrBA,EAAKI,UAAU,EAAGF,GAzE3BnB,EAAWsB,iBAAiB,SAAU,SAACC,GAE/BrC,IAAAA,EAAaiB,EAAYqB,MAEzBpC,EAASa,SAASa,cAAc,gCAAgCU,MAEhErC,EAAcc,SAASC,eAAe,SAASsB,MACrDD,EAAEE,iBAGiB,KAAfvC,GAEFkB,EAAY,2BAA4B,gBAI1CD,EAAYqB,MAAQ,GAGbvC,EAAAA,QAAAA,OAAOC,EAAYC,EAAaC,GAAQE,KAAK,SAACoC,GACnD5B,QAAQC,IAAI2B,GAERC,IAAAA,EAAJ,6BAEAD,EAAQE,QAAQ,SAACC,GAEXC,IAAAA,EAAQD,EAAKE,QACbF,EAAKE,QAAQC,OAAO,GAAGC,OAAOC,IAC9B,iEACJP,GACmCG,8DAAAA,OAAAA,EAEND,+FAAAA,OAAAA,EAAKM,MACPnB,0CAAAA,OAAAA,EAAaa,EAAKO,SAAU,KAEjDP,6BAAAA,OAAAA,EAAKK,IAILL,sIAAAA,OAAAA,EAAKQ,UAEqCR,kEAAAA,OAAAA,EAAKS,MAZrD,4CAgBFX,GAAA,SACA1B,SAASC,eAAe,WAAWqC,UAAYZ","file":"redditSearchApp.838ce805.js","sourceRoot":"..","sourcesContent":["export default {\r\n  search: function (searchTerm, searchLimit, sortBy) {\r\n    return fetch(`http://www.reddit.com/search.json?q=${searchTerm}\r\n    &sort=${sortBy}&limit=${searchLimit}`)\r\n      .then((res) => res.json())\r\n      .then((data) => data.data.children.map((data) => data.data))\r\n      .catch((err) => console.log(err));\r\n  },\r\n};\r\n","import reddit from \"./redditapi\";\r\n\r\nconst searchForm = document.getElementById(\"search-form\");\r\nconst searchInput = document.getElementById(\"search-input\");\r\n\r\n// Form Event Listener\r\nsearchForm.addEventListener(\"submit\", (e) => {\r\n  // Get search term\r\n  const searchTerm = searchInput.value;\r\n  // Get sort\r\n  const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\r\n  // Get limit\r\n  const searchLimit = document.getElementById(\"limit\").value;\r\n  e.preventDefault();\r\n\r\n  // Check input\r\n  if (searchTerm === \"\") {\r\n    //show message\r\n    showMessage(\"Please add a search term\", \"alert-danger\");\r\n  }\r\n\r\n  // Clear input\r\n  searchInput.value = \"\";\r\n\r\n  // Search Reddit\r\n  reddit.search(searchTerm, searchLimit, sortBy).then((results) => {\r\n    console.log(results);\r\n\r\n    let output = `<div class=\"card-columns\">`;\r\n    // Loop through posts\r\n    results.forEach((post) => {\r\n      // Check for image\r\n      let image = post.preview\r\n        ? post.preview.images[0].source.url\r\n        : \"https://blog.en.uptodown.com/files/2019/02/reddit-featured.jpg\";\r\n      output += `<div class=\"card\">\r\n        <img class=\"card-img-top\" src=\"${image}\" alt=\"Card image cap\">\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title\">${post.title}</h5>\r\n          <p class=\"card-text\">${truncateText(post.selftext, 100)}</p>\r\n          <a href=\"${\r\n            post.url\r\n          }\" target=\"_blank\" class=\"btn btn-primary\">Read More</a>\r\n          <hr>\r\n          <span class=\"badge badge-secondary\">Subreddit: ${\r\n            post.subreddit\r\n          } </span>\r\n          <span class=\"badge badge-dark\">Subreddit: ${post.score} </span>\r\n        </div>\r\n      </div>`;\r\n    });\r\n    output += `</div>`;\r\n    document.getElementById(\"results\").innerHTML = output;\r\n  });\r\n});\r\n\r\n// Show message\r\nfunction showMessage(message, className) {\r\n  // Create div\r\n  const div = document.createElement(\"div\");\r\n  div.className = `alert ${className}`;\r\n  // Add text\r\n  div.appendChild(document.createTextNode(message));\r\n  // Get parent\r\n  const searchContainer = document.getElementById(\"search-container\");\r\n  // Get search\r\n  const search = document.getElementById(\"search\");\r\n  // insert Message\r\n  searchContainer.insertBefore(div, search);\r\n  // Timeout alert\r\n  setTimeout(() => {\r\n    document.querySelector(\".alert\").remove();\r\n  }, 3000);\r\n}\r\n\r\n// Truncate text\r\nfunction truncateText(text, limit) {\r\n  const shortened = text.indexOf(\" \", limit);\r\n  if (shortened == -1) return text;\r\n  return text.substring(0, shortened);\r\n}\r\n"]}