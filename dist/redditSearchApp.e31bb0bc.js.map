{"version":3,"sources":["redditapi.js","index.js"],"names":["search","searchTerm","searchLimit","sortBy","fetch","then","res","json","data","children","map","catch","err","console","log","searchForm","document","getElementById","searchInput","addEventListener","e","value","querySelector","preventDefault","showMessage","reddit","results","output","forEach","post","image","preview","images","source","url","title","truncateText","selftext","subreddit","score","innerHTML","message","className","div","createElement","appendChild","createTextNode","searchContainer","insertBefore","setTimeout","remove","text","limit","shortened","indexOf","substring"],"mappings":";;ACAA;;;;AAEA,IAAMe,UAAU,CDFD,ECEIC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAnB;AACA,ADFEjB,EAAAA,ECEIkB,IDFE,EAAE,KCEO,GAAGF,QAAQ,ADFRf,CCESgB,SDFnB,EAAsBf,GCEZ,CAAwB,ODFlC,EAAmCC,KCEzB,CAApB,ADFU,ECIV,ADJqD;AACjD,WAAOC,KAAK,+CAAwCH,UAAxC,yBACJE,MADI,oBACYD,WADZ,EAAL,CAEJG,IAFI,CAEC,UAACC,GAAD;ACEZS,ADFY,UCEF,CAACI,EDFUb,GAAG,CAACC,IAAJ,EAAT,ICEZ,CAA4B,QAA5B,EAAsC,UAACa,CAAD,EAAO;AAC3C,ADHU,KAFD,EAGJf,IAHI,CAGC,UAACG,IAAD;ACGV,ADHU,MCGJP,ODHcO,GCGJ,CDHQ,CAACA,CCGNU,GDHC,CAAUT,OCGA,CAACY,ADHX,CAAmBX,GAAnB,CCGpB,ADH2C,CCCA,CAG3C,QDJ4CF,IAAD;AAAA,eAAUA,IAAI,CAACA,IAAf;ACK3C,ADL2C,MCKrCL,CDLc,CAAV,ICKE,GAAGa,QAAQ,CAACM,aAAT,CAAuB,8BAAvB,EAAuDD,KAAtE,CAJ2C,CAK3C;ADNU,KAHD,EAIJV,KAJI,CAIE,UAACC,GAAD;ACMX,ADNW,MCMLV,ODNcW,ICMH,GAAGG,ADNO,CAACF,GAAR,CAAYF,GCMJ,ADNR,CCMSK,ADNlB,cCMS,CAAwB,OAAxB,EAAiCI,KAArD;AACAD,ADPW,ECOXA,CAAC,CAACG,CDXO,CAAP,YCWF,GAP2C,CAS3C;ADRC;ACSD,ADhBa,MCgBTtB,UAAU,KAAK,EAAnB,EAAuB;AACrB;AACAuB,IAAAA,WAAW,CAAC,0BAAD,EAA6B,cAA7B,CAAX;AACD,GAb0C,CAe3C;;;AACAN,EAAAA,WAAW,CAACG,KAAZ,GAAoB,EAApB,CAhB2C,CAkB3C;;AACAI,qBAAOzB,MAAP,CAAcC,UAAd,EAA0BC,WAA1B,EAAuCC,MAAvC,EAA+CE,IAA/C,CAAoD,UAACqB,OAAD,EAAa;AAC/Db,IAAAA,OAAO,CAACC,GAAR,CAAYY,OAAZ;AAEA,QAAIC,MAAM,iCAAV,CAH+D,CAI/D;;AACAD,IAAAA,OAAO,CAACE,OAAR,CAAgB,UAACC,IAAD,EAAU;AACxB;AACA,UAAIC,KAAK,GAAGD,IAAI,CAACE,OAAL,GACRF,IAAI,CAACE,OAAL,CAAaC,MAAb,CAAoB,CAApB,EAAuBC,MAAvB,CAA8BC,GADtB,GAER,gEAFJ;AAGAP,MAAAA,MAAM,8EAC6BG,KAD7B,+GAGuBD,IAAI,CAACM,KAH5B,qDAIqBC,YAAY,CAACP,IAAI,CAACQ,QAAN,EAAgB,GAAhB,CAJjC,uCAMAR,IAAI,CAACK,GANL,sJAUAL,IAAI,CAACS,SAVL,6EAY0CT,IAAI,CAACU,KAZ/C,2CAAN;AAeD,KApBD;AAqBAZ,IAAAA,MAAM,YAAN;AACAX,IAAAA,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCuB,SAAnC,GAA+Cb,MAA/C;AACD,GA5BD;AA6BD,CAhDD,GAkDA;;AACA,SAASH,WAAT,CAAqBiB,OAArB,EAA8BC,SAA9B,EAAyC;AACvC;AACA,MAAMC,GAAG,GAAG3B,QAAQ,CAAC4B,aAAT,CAAuB,KAAvB,CAAZ;AACAD,EAAAA,GAAG,CAACD,SAAJ,mBAAyBA,SAAzB,EAHuC,CAIvC;;AACAC,EAAAA,GAAG,CAACE,WAAJ,CAAgB7B,QAAQ,CAAC8B,cAAT,CAAwBL,OAAxB,CAAhB,EALuC,CAMvC;;AACA,MAAMM,eAAe,GAAG/B,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,CAAxB,CAPuC,CAQvC;;AACA,MAAMjB,MAAM,GAAGgB,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf,CATuC,CAUvC;;AACA8B,EAAAA,eAAe,CAACC,YAAhB,CAA6BL,GAA7B,EAAkC3C,MAAlC,EAXuC,CAYvC;;AACAiD,EAAAA,UAAU,CAAC,YAAM;AACfjC,IAAAA,QAAQ,CAACM,aAAT,CAAuB,QAAvB,EAAiC4B,MAAjC;AACD,GAFS,EAEP,IAFO,CAAV;AAGD,EAED;;;AACA,SAASd,YAAT,CAAsBe,IAAtB,EAA4BC,KAA5B,EAAmC;AACjC,MAAMC,SAAS,GAAGF,IAAI,CAACG,OAAL,CAAa,GAAb,EAAkBF,KAAlB,CAAlB;AACA,MAAIC,SAAS,IAAI,CAAC,CAAlB,EAAqB,OAAOF,IAAP;AACrB,SAAOA,IAAI,CAACI,SAAL,CAAe,CAAf,EAAkBF,SAAlB,CAAP;AACD","file":"redditSearchApp.e31bb0bc.js","sourceRoot":"..","sourcesContent":["export default {\r\n  search: function (searchTerm, searchLimit, sortBy) {\r\n    return fetch(`http://www.reddit.com/search.json?q=${searchTerm}\r\n    &sort=${sortBy}&limit=${searchLimit}`)\r\n      .then((res) => res.json())\r\n      .then((data) => data.data.children.map((data) => data.data))\r\n      .catch((err) => console.log(err));\r\n  },\r\n};\r\n","import reddit from \"./redditapi\";\r\n\r\nconst searchForm = document.getElementById(\"search-form\");\r\nconst searchInput = document.getElementById(\"search-input\");\r\n\r\n// Form Event Listener\r\nsearchForm.addEventListener(\"submit\", (e) => {\r\n  // Get search term\r\n  const searchTerm = searchInput.value;\r\n  // Get sort\r\n  const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\r\n  // Get limit\r\n  const searchLimit = document.getElementById(\"limit\").value;\r\n  e.preventDefault();\r\n\r\n  // Check input\r\n  if (searchTerm === \"\") {\r\n    //show message\r\n    showMessage(\"Please add a search term\", \"alert-danger\");\r\n  }\r\n\r\n  // Clear input\r\n  searchInput.value = \"\";\r\n\r\n  // Search Reddit\r\n  reddit.search(searchTerm, searchLimit, sortBy).then((results) => {\r\n    console.log(results);\r\n\r\n    let output = `<div class=\"card-columns\">`;\r\n    // Loop through posts\r\n    results.forEach((post) => {\r\n      // Check for image\r\n      let image = post.preview\r\n        ? post.preview.images[0].source.url\r\n        : \"https://blog.en.uptodown.com/files/2019/02/reddit-featured.jpg\";\r\n      output += `<div class=\"card\">\r\n        <img class=\"card-img-top\" src=\"${image}\" alt=\"Card image cap\">\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title\">${post.title}</h5>\r\n          <p class=\"card-text\">${truncateText(post.selftext, 100)}</p>\r\n          <a href=\"${\r\n            post.url\r\n          }\" target=\"_blank\" class=\"btn btn-primary\">Read More</a>\r\n          <hr>\r\n          <span class=\"badge badge-secondary\">Subreddit: ${\r\n            post.subreddit\r\n          } </span>\r\n          <span class=\"badge badge-dark\">Subreddit: ${post.score} </span>\r\n        </div>\r\n      </div>`;\r\n    });\r\n    output += `</div>`;\r\n    document.getElementById(\"results\").innerHTML = output;\r\n  });\r\n});\r\n\r\n// Show message\r\nfunction showMessage(message, className) {\r\n  // Create div\r\n  const div = document.createElement(\"div\");\r\n  div.className = `alert ${className}`;\r\n  // Add text\r\n  div.appendChild(document.createTextNode(message));\r\n  // Get parent\r\n  const searchContainer = document.getElementById(\"search-container\");\r\n  // Get search\r\n  const search = document.getElementById(\"search\");\r\n  // insert Message\r\n  searchContainer.insertBefore(div, search);\r\n  // Timeout alert\r\n  setTimeout(() => {\r\n    document.querySelector(\".alert\").remove();\r\n  }, 3000);\r\n}\r\n\r\n// Truncate text\r\nfunction truncateText(text, limit) {\r\n  const shortened = text.indexOf(\" \", limit);\r\n  if (shortened == -1) return text;\r\n  return text.substring(0, shortened);\r\n}\r\n"]}